===============================================================================
libldsc
===============================================================================
Nome deste arquivo: 	TODO
Conteudo:		Lista das tarefas a serem realizadas.
Autor:			André Duarte Bueno, Leando Puerari.

===============================================================================
Outros arquivos de ajuda
===============================================================================
README		Descreve o que é a libldsc e os arquivos de ajuda.
INSTALL		Descreve como instalar a libldsc.
HOWTO		Descreve como utilizar a libldsc.
NEWS		Descreve as novidades das últimas versões.
ORGANIZATION	Descreve como modificar a libldsc 
		(informaçoes para desenvolvedores - programadores).
TODO		Lista das tarefas a serem realizadas.
BUGS		Lista de bugs relatados ou identificados.
ChangeLog	Lista de modificaçoes da biblioteca.
COPYING		Descreve as condições para cópia e instalação da libldsc
		e a licençaa pública da GNU (Versão 2).
AUTHORS		Lista dos autores da libldsc.

===============================================================================

\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                               TODO-> TESE ALUNOS
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[Específico tese Leandro]
=======================================
Objetivo: A ideia é resolver questões associadas diretamente a tese do 
Leandro, usando códigos existentes.
O Leandro fica com controle do branch master até terminar sua tese.

[] - Gerar pacote da versao (1.5 que funcione redondinho com lvp) e arquivar em libs.
Será a ultima versao com estrutura de diretórios antiga.
Gerar a versão da lib no git.
[] - Copiar libldsc-1.5 para Desenvolvimento-02-Bibliotecas-Releases/LIB_LDSC
[] - Gerar pacote com libldsc-1.5 + lvp e no nome adicionar Leandro.
Gerar a versão do lvp no git.
[] - Copiar lvp para Desenvolvimento-03-Programas-Releases.

[] - Criar hierarquia de classes/modelos para calcular distribuição de sítios e ligações a partir 
de imagens 2D.
[] - Criar hierarquia de classes/modelos para calcular distribuição de sítios e ligações a partir 
de imagens 3D.
[] - Criar hierarquia para montagem redes de percolação a partir distribuição de sítios e 
ligações.
[] - Criar estrutura para teste dos códigos desenvolvidos pelo Leandro. Deve adotar padrão uniforme 
em toda lib_ldsc.

[Específico mestrado Rafael]
=======================================
[] - Verificar códigos Rafael -2D e botar para funcionar (test/AberturaDilatacao).

[Específico mestrado Eneida]
=======================================
[] - Verificar códigos Eneida e botar para funcionar (test/RedesNeurais).

[Específico mestrado Tiago]
=======================================
[] - Verificar códigos DanoFormacao, mover para lib_ldsc.
[] - Verificar códigos SAIL,  adicionar ao LVP? 


\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                     TODO-> Organizacao diretórios lib_ldsc
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[Nova estrutura diretórios]
=======================================
[bueno@localhost src]$ tree -L 3 -d
[x] - ├── Amostra
[x] - │   ├── AmostraRocha
[x] - │   └── Material
[x] - ├── AnaliseImagem
[x] - │   ├── Caracterizacao (geralmente uma informação geométrica)
[x] - │   │   ├── Correlacao
[x] - │   │   ├── Distribuicao
[x] - │   │   ├── Fractal
[x] - │   │   ├── GrafoConexaoSerial
[x] - │   │   └── RedePercolacao
[x] - │   ├── Filtro (criar namespace alias PreProcessamento)
[x] - │   │   ├── FAmplitude
[x] - │   │   ├── FEspacial
[x] - │   │   ├── FFrequencial
[x] - │   │   └── Mascara
[ ] - │   ├── Geometria (mover para dentro Caracterizacao)
[x] - │   │   └── Bola
[ ] - │   ├── Matriz (mover para MetNum)
[x] - │   ├── Reconstrucao
[x] - │   ├── Segmentacao
[x] - │   │   └── PorosGargantas
[x] - │   └── Simulacao (geralmente uma propriedade física)
[x] - │       ├── ConfiguracaoEquilibrio
[ ] - │       ├── Tortuosidade
[ ] - │       ├── DanoFormacao
[x] - │       └── Permeabilidade
[x] - ├── Base
[x] - ├── Estatistica
[x] - ├── Grafico
[x] - │   └── Gnuplot
[x] - ├── MetNum
[x] - │   ├── Contorno
[x] - │   ├── Funcao
[x] - │   ├── Integral
[x] - │   ├── Interpolacao
[x] - │   │   ├── Interpolacao2D
[x] - │   │   ├── IntMetNum
[x] - │   └── Solver
[x] - │       ├── Funcao
[x] - │       └── SistemaEquacoes
[ ] - ├── RedesNeurais
[x] - └── Tempo

[Nova estrutura diretórios 2 -> lib_ldsc(base) e lib_ldsc_engenharia]
======================================================================
Objetivo é separar o que é conceito básico,  que deve estar na lib_ldsc, 
de conceito derivado,  que deve estar numa biblioteca de aplicação.
Por exemplo,  programa pode precisar das coisas da lib_ldsc,  mas não do GrafoConexaoSerial ou ConfiguracaoEquilibrio.
-> lib_ldsc             (dividida em bibliotecas pequenas) 
[x] - ├── Base           (coisas muito básicas usadas com frequência em todos os lugares)
[x] - ├── EstruturaDados (dados em geral)
[x] - ├── AnaliseImagem  (livros gonzales/parker/russ/morfmat)
[x] - ├── Estatistica    (livros estatística e probabilidade)
[x] - ├── Grafico        (livros gráficos; acesso programas gráficos como gnuplot);
[ ] - ├── InteligenciaArtificial(livros redes neurais e inteligência artificial);
[x] - ├── MetNum         (livros métodos numéricos)

-> lib_ldsc_engenharia  (dividida em bibliotecas pequenas (+específico a engenharia))
[x] - ├── Materiais       (livros materiais)
[x] - ├── AnaliseImagem   (analise de imagem aplicada a engenharia,  livros engenharia)
-> Adicionar exemplos de provas
-> Adicionar códigos bismarck/wagner/capico
-> Adicionar códigos felipe schram
...

-> LVP                 Software
[x] - ├── XXX           ( software que usa as duas libs )

[bueno@localhost src]$ tree -L 3 -d
=======================================================================================lib_ldsc
-> lib_ldsc             (dividida em bibliotecas pequenas) 
[x] - ├── Base        (coisas muito básicas usadas com frequência em todos os lugares)
[x] - │   ├── Tempo
[x] - ├── EstruturaDados (estruturas de dados em geral)
[x] - │   ├── Grafo     (conexões ) [CObjetoGrafo + CGrafo]
[x] - │   ├── Rede      (conexões + propriedades) [CObjetoRede + CRede]
[x] - │   ├── Esqueleto (conexões + propriedades + coordenada) [CObjetoEsqueleto + CEsqueleto]
[x] - ├── AnaliseImagem (encontrado livros gonzales/parker/russ/morfmat)
[x] - │   ├── Base (coisas básicas usadas com frequência em analise de imagem)
[x] - │   │   └── Geometria
[x] - │   │   │   └── Bola
[x] - │   │   └── Matriz (CVetor CMatriz2D CMatriz3D; em métodos numéricos usar array ou matriz de boost? )[mover para lib_ldsc_base? ]
[x] - │   ├── Filtro (realiza um PreProcessamento na imagem)
[x] - │   │   ├── FAmplitude 
[x] - │   │   ├── FEspacial
[x] - │   │   ├── FFrequencial
[x] - │   │   └── Mascara
[x] - ├── Estatistica (encontrado livros estatística e probabilidade)
[x] - │   ├── XX
[x] - │   │   └── XX
[x] - │   │   │   └── XX - classes programa alunos georgiana
[x] - ├── Grafico (encontrado livros gráficos; acesso programas gráficos como gnuplot);
[x] - │   └── Gnuplot
[ ] - ├── InteligenciaArtificial(encontrado livros redes neurais e inteligência artificial);
[x] - │   └── RedesNeurais codigos que montei para eneida
[x] - ├── MetNum       (encontrado livros métodos numéricos)
[x] - │   ├── Contorno
[x] - │   ├── Funcao
[x] - │   ├── Integral
[x] - │   ├── Interpolacao
[x] - │   │   ├── Interpolacao2D
[x] - │   │   ├── IntMetNum
[x] - │   └── Solver
[x] - │       ├── Funcao
[x] - │       └── SistemaEquacoes

=======================================================================================lib_ldsc_engenharia
-> lib_ldsc_engenharia  (dividida em bibliotecas pequenas (+específico a engenharia))
[x] - ├── Material
[x] - │   └── CFluido (criar hierarquia se for usar em nós de simulação)
[x] - │   └── CFluidoColetado (inclui dados coleta? )
[x] - │   └── Amostra
[x] - │   │   ├── DadosColeta   (informações sobre coleta da amostra ? ? ? quem/quando/onde..)
[x] - │   │   ├── AmostraRocha  (adiciona dados coleta)
[x] - ├── AnaliseImagem
[x] - │   ├── Base (coisas básicas usadas com frequência em analise de imagem de meios porosos)
[x] - │   ├── Filtro ( específicos segmentacao imagens meios porosos ? ? )
[x] - │   │   ├── FAmplitude 
[x] - │   ├── Caracterizacao (geralmente uma informação geométrica do meio poroso)
[x] - │   │   ├── Correlacao (função autocorrelação)
[x] - │   │   ├── Distribuicao ( distribuição tamanho poros - usar morfmat)
[x] - │   │   │   └── SitiosLigacoes (2D e 3D - Leandro)
[x] - │   │   │   └── PorosGargantas ***?
[x] - │   │   ├── GrafoConexaoSerial (tese Bueno)
[x] - │   │   └── RedePercolacao ( tese Leandro);
[x] - │   │   ├── Fractal (de meios porosos? )
[x] - │   ├── Reconstrucao (de meios porosos)
[x] - │   └── Simulacao (geralmente uma propriedade física)
[x] - │       ├── ConfiguracaoEquilibrio ***
[ ] - │       ├── Tortuosidade ***
[ ] - │       ├── DanoFormacao ***
[x] - │       └── Permeabilidade ***
[x] - ├── Estatistica
[x] - ├── Grafico
[x] - │   └── Gnuplot
[x] - ├── MetNum
[x] - │   ├── Contorno
[x] - │   ├── Funcao
[x] - │   ├── Integral
[x] - │   ├── Interpolacao
[x] - │   │   ├── Interpolacao2D
[x] - │   │   ├── IntMetNum
[x] - │   └── Solver
[x] - │       ├── Funcao
[x] - │       └── SistemaEquacoes
[ ] - ├── RedesNeurais

\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                    TODO: Documentacao lib_ldsc 
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
Objetivo: revisar os códigos da biblioteca e ao mesmo tempo atualizar documentação.
[ ] - Documentar a lib_ldsc considerando inovações do doxygen, como exemplo: @todo @test @bug

\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                    TODO: Conversão lib_ldsc para C++11
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
Objetivo: Corrigir a lib_ldsc considerando inovações de C++11/C++14.
[] - Criar arquivo modelo que lista as inovações a serem consideradas (ver resumo c++11)
Para cada classe criar arquivo CNomeClasse.C++11.todo?
[ ] - Antes de fazer as modificacoes gerar saidas padrões, que devem ser posteriormente conferidas.
[ ] - Reescrever as classes básicas e depois os códigos específicos.
[ ] - Somente as classes novas devem fazer parte da nova lib?
[ ] - Reescrever CVetor/CMatriz2D/CMatriz3D usando template
[ ] - Reescrever CImagem2D/CImagem3D usando template
[ ] - Modificar CVetor CMatriz2D e CMatriz3D, de forma que a alocação seja da forma
double* pm1d =  new double[nx*ny*nz];
assim, códigos legados, como os herdados de Liang possam ser tratados sem o uso macros.
[ ] - Fazer correções conceituais e lógicas
[ ] - Estudar valarray e array,  objetivo entender como funcionam; e substituir CVetor CMatriz2D?  CMatriz3D?


\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                    TODO: Pendências lib_ldsc 
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[Itens diversos recentes]
=======================================
[ ] -Renomear TFEEsqueletoV13D -> TFEEsqueleto_3D_M1  
[ ] -Renomear TFEEsqueletoV23D -> TFEEsqueleto_3D_M2  ...
[ ] -Eliminar CAberturaDilatacao-old
[ ] -Renomear CContornoCentro -> CEstimativaValorInicial
[ ] -Verificar possível relacao entre CDistribuicao e CDistribuicaoIDF
[ ] -Atualizar CENormal CEFStudent CEStudent CEChiQuadrado considerando classes específicas de C++11
(eventualmente devem ser eliminadas e substituidas no código pelas versões C++11).
[ ] -Substituir uso CERandomico por versão C++11
[ ] -relacao CEstatistica e CEstatistica2D
[ ] - CFuncoesEspeciais -> namespace CMath? usar/adicionar coisas de C++11
[ ] -CPermeabilidade -> CPermeabilidadeIntrinsica -> CPermeabilidadeRelativa
[ ] -CReconstrucaoEsferas herdeira de CReconstrucao?
[ ] -os diagramas gerados pelo doxygem poderiam ser apresentados considerando pacotes, pensar usar namespace ou pacotes do doxygen.
[ ] - CTime adicionar coisas de C++11
[ ] -Renomear CFEEsqueletoV1 -> CFEEsqueleto_M1

[Itens antigos]
=======================================
[] - Testar novas classes de Correlacao, ver resultado no lvp.
[] - A simulação da permeabilidade deve incluir ida e volta 
(ver código em src/coilib-imago/ConEq- TIConfiguracoesEquilibrio3D.h .cpp e 
TIConfEq3DSimPermRel.h .cpp).
[ ] - As provas feitas para os alunos tem exemplos que podem ser acrescentados a lib.
[ ] - Verificar quais trabalhos feitos por alunos tem códigos úteis. Fazer revisão.
[ ] - Implementar nova FFT (baseada no codigo do livro do parker).
[ ] - Testar calculo correlacao usando nova FFT?
[ ] - Testar reconstrucao usando nova FFT?
[ ] - Implementar classe derivada de CGrafo3Dby2D_M8 que usa idf para estimar as condutâncias!
Fazer análise comparativa do gráfico de poisele em tubo com gráfico idf usando diferentes métricas 
para identificar métrica que melhor estima poiselle.
[ ] - Implementar código híbrido, que calcula configurações de equilíbrio e a seguir usa lattice 
boltzman para ajuste fino. Acelerando calculo do lattice boltzman.


\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                    TODO: Teste lib_ldsc 
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[ ] - O diretório test deve ter a mesma estrutura de src,
e cada subdiretório deve testar as classes correspondentes.
[ ] - Montar os testes com documentacao e dados completos, de forma que sejam úteis para usuários.
[ ] - O teste de Estatistica (Normal, student, ...) deve gerar os graficos usando o gnuplot.
[ ] - Os programas que foram colocados dentro de test devem ser retirados.
[ ] - Criar programa externo que acessa a lib. O programa deve ser bem documentado, de forma a 
servir de base para aprendizado.
[ ] - verificar IDF Euclidiana ; Esta utilizando valores maiores que 255, 
e está dando problema ao salvar a imagem tons de cinza em formato binário. 
(O formato binário utilizado pela libldsc é de 8 bits aceitando assim valores de 0 a 255). 


\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                               TODO-> LVP
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[Específico LVP]
============================================
[ ] - Revisar códigos de Anaimp
[ ] - Revisar códigos de Imago
[ ] - Revisar códigos de SAIL
[ ] - Acrescentar códigos interesssantes de Anaimp
[ ] - Acrescentar códigos interesssantes de Imago
[ ] - Acrescentar códigos interesssantes de SAIL


\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
                               TODO-> feature grafoconexaoserial
\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
[Específico feature->atualizacao_grafo_conexão_serial]
======================================================
[X] - Reorganizar hierarquia de objetos do grafo:  
CObjetosGrafo     (rotulo)
CObjetosRede      (propriedade,  conexao,  condutancia)
CObjetosEsqueleto ( cx, cy, cz)
[X] - Renomear diversas variáveis e funções.
[X] - Criar enumeração TipoGrafo e função Tipo,  que retorna o tipo de objeto.
[x] - Criar classe CObjetoRede_Tipo e CObjetosEsqueleto_Tipo sem métodos virtuais (otimização).
[] - Renomear CGrafo_3dBy2D para CGrafoConexaoSerial
[] - Fazer funcionar
[] - Reorganizar estrutura diretorios
/EstruturaDados 
/EstruturaDados/Grafo 
/EstruturaDados/Rede
/EstruturaDados/Esqueleto 
[] - 
[] - 
[] - 
[] - Controle acesso,  colocar protected: e friend para CGrafo CPermeabilidadeGrafo
[] - @todo: trocar assert? usar static_assert de C++11! ou try..catch?
[] - Transformar Vector em template.

[] - Diretórios?
Caracterizacao/GrafoConexaoSerial
Caracterizacao/RedePercolacao
Depois:
Caracterizacao/Grafo/ CObjetoGrafo CGrafo
Caracterizacao/Rede/  CObjetoRede  CRede
Caracterizacao/Esqueleto/  CObjetoRede  CEsqueleto
GrafoConexaoSerial
[] trocar unsigned int por uint32_t
[] - otimização,  testar uso de <list> no lugar de vector.
[] - Terminar montar hierarquia considerando classes derivadas EST WEST
[] - Revisar todo cálculo na hierarquia de objetos CGrafo
[] -  Testar

[] - Criar novo diretório CGrafoOtimizado,  em que os objetos rede e esqueleto não terão 
métodos virtuais (pode ter herança).

[] -   @todo:    Criar classes 
  CReta -> CReta(a,b); Calcula y = Go(x); Calcula y = Go(x,a,b);
  CSegmentoReta (prova c++)
  using CEstimativaValorBaseadaValorContorno = CSegmentoReta;
  no grafo substituir CContornoCentro por CContorno, e
  usar criar CEstimativaValorBaseadaValorContorno.
??  
long double EstimativaValorBaseadaValorContorno(long double a,long double b){}
