===============================================================================
libldsc
===============================================================================
Nome deste arquivo: 	TODO
Conte�do:		Lista das tarefas a serem realizadas.
Autor:			Andr� Duarte Bueno

===============================================================================
Outros arquivos de ajuda
===============================================================================
README		Descreve o que � a libldsc e os arquivos de ajuda.
INSTALL		Descreve como instalar a libldsc.
HOWTO		Descreve como utilizar a libldsc.
NEWS		Descreve as novidades das �ltimas vers�es.
ORGANIZATION	Descreve como modificar a libldsc 
		(informa��es para desenvolvedores - programadores).
TODO		Lista das tarefas a serem realizadas.
BUGS		Lista de bugs relatados ou identificados.
ChangeLog	Lista de modifica��es da biblioteca.
COPYING		Descreve as condi��es para c�pia e instala��o da libldsc
		e a licen�a p�blica da GNU (Vers�o 2).
AUTHORS		Lista dos autores da libldsc.

===============================================================================

Emergencial:
0)
ok- Leandro: testar novas classes de Correlacao, ver resultado no lvp.
- Verificar códigos Leandro e botar para funcionar (dentro da libldsc).
	- A simulação da permeabilidade deve incluir ida e volta 
	(ver código em src/coilib-imago/ConEq- TIConfiguracoesEquilibrio3D.h .cpp e 
	TIConfEq3DSimPermRel.h .cpp).

- Verificar códigos Rafael e botar para funcionar (test/AberturaDilatacao).

- Verificar códigos Eneida e botar para funcionar (test/RedesNeurais).

- Revisar a lib_ldsc
	- Melhorar test/correlacao
	- Melhorar test/estatistica (testar todas as classes de estatistica)
	
- Precisa Mover
	- Base/CSimulacao para Simulacao?
	- Base/CSolver para Solver?
- Corrigir a lib_ldsc
- Documentar a lib_ldsc
- Gerar pacote da versao (1.5 que funcione redondinho com lvp) e arquivar em libs.
	Será a ultima versao com esta estrutura de diretórios.
- Gerar pacote com libldsc-1.5 + lvp e no nome adicionar Leandro.
- Copiar libldsc-1.5 para Desenvolvimento-02-Bibliotecas-Releases/LIB_LDSC
- Copiar lvp para Desenvolvimento-03-Programas-Releases.

1)
- Criar nova estrutura de diretórios
- MetodoNumerico
- AnaliseImagem
- MeioPoroso
- RedesNeurais


2) Atualizacao dos softwares de apoio para última versão:
- O objetivo é se familiarizar com estes softwares.
- Todos usando Fedora 12 ou 13.
- Atualizar o kdevelop para versão 4 
	(deve ficar com as duas versões até que a nova fique estável).
- Atualizar o g++ para ultima versão 4.5.
- Atualizar umbrello para ultima versão .
- Atualizar cervisia para ultima versão .
- Baixar e instalar ultima versão do VP - Visual Paradigm

3)
- Baixar wget -r http://gcc.gnu.org/onlinedocs/libstdc++
(ver como ter as documentacoes do kdevelop e demais softwares instaladas,
i.e, nome dos pacotes de documentacao)
- Ler material atualizado do VP - Visual Paradigm
- Ler material atualizado do kdevelop (help)
- Ler material atualizado do cervisia
- Ler livros sobre padroes para desenvolvimento (nomes classes/atributos/métodos)...
- Ler livros sobre UML2
- Ler livros sobre C++0x
- Ler livros sobre Boost
- Ler livros sobre outras bibliotecas
- Ler livros sobre Padroes de projeto

4) Bibliotecas
- Verificar bibliotecas da GNU.
- Utilizar metodos numericos da GNU?
- Se nao tiver em C++, criar classes para encapsular?
- Usar blitz++ ? quando for trabalhar com matrizes ?
- Analisar em detalhes a magick++.
- Adotar magick++ para processamento de imagens?

5)
- Ativar svn no servidor da rede científica
(inclusive para acesso externo).

6)
- Definir o padrão de desenvolvimento
- Definir metodologia de trabalho - fluxo de trabalho
- Testar padrao e metodologia com desenvolvimento da nova lib
		
7)
- Reescrever as classes básicas e depois os códigos específicos.
- Somente as classes novas devem fazer parte da nova lib?
- Reescrever CVetor/CMatriz2D/CMatriz3D
- Reescrever CImagem2D/CImagem3D
- Modificar CVetor CMatriz2D e CMatriz3D, de forma que a alocacao seja da forma
double pm1d =  new double[nx*ny*nz];
assim, códigos legados, como os herdados de Liang possam ser tratados sem 
o uso macros. Antes de fazer as modificacoes gerar saidas padroes, que devem ser posteriormente
conferidas.
- Fazer correções conceituais e lógicas
- Acrescentar códigos de Anaimp
- Acrescentar códigos de Imago
- Acrescentar códigos de SAIL

8)
- O diretório test deve ter a mesma estrutura de src,
e cada subdiretório deve testar as classes correspondentes.
- Montar os testes com documentacao e dados completos, de forma que sejam úteis para usuários
- O teste de Estatistica (Normal, student, ...) deve gerar os graficos usando o gnuplot.

9)
- Os programas que foram colocados dentro de test
devem ser retirados. 
- Criar programa externo que acessa a lib.
- O programa deve ser bem documentado, de forma a servir
de base para aprendizado.


10)
- As provas feitas para os alunos tem exemplos que podem ser acrescentados a lib.

11)
- Verificar se programas feitos por alunos podem, após revisão,
serem acrescentados a lib.

12) Otimizacao
- Aprender a usar gprof
- Aprender a usar Valgrind
- Fazer analise de desempenho e consumo de memória
- Eliminar dependencia de commonC++, 
- usar thread do novo padrão de C++0x.

13)
- Pensar em como vai ser a relacao com qt
- Criar métodos InputDialog() ? para leitura dos atributos da classe?


14) Novas funcoes:
- Implementar nova FFT,
montar baseada no codigo do livro do parker.
- Testar calculo correlacao usando nova FFT?
- Testar reconstrucao usando nova FFT?
- 
- 
