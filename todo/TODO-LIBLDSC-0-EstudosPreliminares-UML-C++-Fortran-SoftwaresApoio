===============================================================================
libldsc
===============================================================================
Nome deste arquivo: 	TODO
Conteudo:		Lista das tarefas a serem realizadas.
Autor:			André Duarte Bueno, Leando Puerari.

===============================================================================
Outros arquivos de ajuda
===============================================================================
README		Descreve o que é a libldsc e os arquivos de ajuda.
INSTALL		Descreve como instalar a libldsc.
HOWTO		Descreve como utilizar a libldsc.
NEWS		Descreve as novidades das últimas versões.
ORGANIZATION	Descreve como modificar a libldsc 
		(informaçoes para desenvolvedores - programadores).
TODO		Lista das tarefas a serem realizadas.
BUGS		Lista de bugs relatados ou identificados.
ChangeLog	Lista de modificaçoes da biblioteca.
COPYING		Descreve as condições para cópia e instalação da libldsc
		e a licença pública da GNU (Versão 2).
AUTHORS		Lista dos autores da libldsc.

===============================================================================

[Específico Atualização Conhecimentos]
=======================================
[ ] - Ler livros sobre padroes para desenvolvimento (nomes classes/atributos/métodos)...
[ ] - Ler livros sobre UML2
[ ] - Ler livros sobre C++11
[ ] - Ler livros sobre Boost
[ ] - Ler livros sobre Padroes de projeto
[ ] - Ler livros sobre outras bibliotecas específicas aos problemas efetivamente usados

[Específico Padrão de Desenvolvimento]
=======================================
[ ] - Definir fluxo de trabalho (passo a passo para montagem nova feature).
Ver diagrama sala Bueno.
[ ] - Definir ferramentas de apoio: git, IDE,..
[ ] - Definir bibliotecas: C++11,  boost, ...

[Específico Ambiente Desenvolvimento]
=======================================
Objetivo: Estudar ambientes desenvolvimento QT-designer e Kdevelop.
[] - Estudar QT-designer; montar apresentação com comparação.
[] - Estudar kdevelop; montar apresentação com comparação.
[] - Selecionar o mais prático.

[Específico Otimizacao]
============================================
[ ] - Aprender a usar gprof.
[ ] - Aprender a usar Valgrind; ver integração com QT-designer e kdevelop.
[ ] - Fazer analise de desempenho e consumo de memória.
[ ] - Eliminar dependencia de commonC++.
[ ] - Eliminar dependencia de openMP.
[ ] - usar thread do novo padrão de C++11.

[Específico Bibliotecas]
=======================================
Objetivo: selecionar bibliotecas que sejam:
- OO em C++ 
- bem montadas/organizadas
- fáceis de usar 
- rápidas
- e que estejam sendo constantemente atualizadas.
[ ] - Verificar bibliotecas de Boost relacionadas a métodos numéricos.
[ ] - Verificar bibliotecas da GNU relacionadas a métodos numéricos.
[ ] - Selecionar biblioteca específica para suporte a parte das necessidades de métodos numéricos.
[ ] - Analisar em detalhes a magick++.
[ ] - Adotar parte de magick++ para processamento de imagens?
[ ] - Pensar em como vai ser a relacao com qt (a ideia é que a lib seja independente de qt)
[ ] - Criar métodos InputDialog() ? para leitura dos atributos da classe?



